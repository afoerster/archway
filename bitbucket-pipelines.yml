pipelines:
  default:
    - step:
        image: openjdk:8-jdk
        name: "Build and Test API"
        services:
          - postgres
        caches:
          - sbt
          - ivy2
        script:
          - './flyway/flyway migrate -url="jdbc:postgresql://localhost:5432/heimdali" -user=postgres -password=postgres'
          - ./sbt test
          - ./sbt it:test
    - step:
        image: node:9
        name: "Build and Test UI"
        caches:
          - node
        script:
          - npm i -g typescript
          - npm i
          - npm run-script prepare
    - step:
        image: jotunn/cm-validator
        name: "Validate Parcel"
        script:
          - java -jar /usr/src/validator.jar -p $PWD/cloudera-integration/parcel/heimdali-meta/parcel.json
          - java -jar /usr/src/validator.jar -r $PWD/cloudera-integration/parcel/heimdali-meta/permissions.json
          - java -jar /usr/src/validator.jar -p $PWD/cloudera-integration/parcel/custom-shell-meta/parcel.json
    - step:
        image: jotunn/cm-validator
        name: "Validate CSD"
        script:
          - java -jar /usr/src/validator.jar -s $PWD/descriptor/service.sdl

  tags:
    "*":
      - step:
          image: openjdk:8-jdk
          name: "Package API"
          caches:
            - sbt
            - ivy2
          artifacts:
            - api/target/scala-2.12/*
          script:
            - ./sbt "set every test in assembly := {}" api/assembly
      - step:
          name: "Package UI"
          image: node:9
          caches:
            - node
          artifacts:
            - dist/**
          script:
            - npm i -g typescript
            - npm i
            - npm run-script prepare
      - step:
        image: openjdk:8-jdk
          name: "Build Parcel"
          script:
            - ./publish.sh prepare heimdali
            - ./publish.sh ship
      - step:
        image: openjdk:8-jdk
          name: "Build CSD"
          script:
            - sed -i -e "s/0.1.0/${BITBUCKET_TAG}/g" descriptor/service.sdl
            - jar cvf HEIMDALI-${BITBUCKET_TAG}.jar `find . -mindepth 1 -not -path "./.git*"`
            - curl -u$ARTIFACTORY_USER:$ARTIFACTORY_TOKEN -T HEIMDALI-${BITBUCKET_TAG}.jar https://repository.phdata.io/artifactory/parcels-release/com/heimdali/${BITBUCKET_TAG}/HEIMDALI-${BITBUCKET_TAG}.jar

definitions:
  services:
    postgres:
      image: postgres:9
      environment:
        POSTGRES_DB: heimdali
