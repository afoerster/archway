// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Service renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServiceDisplay
    index={0}
    links={
      HiveServiceLinks {
        "links": Array [],
        "service": Object {
          "status": "",
        },
      }
    }
    name=""
    status={
      Status {
        "glowColorText": [Function],
        "statusColor": [Function],
        "statusText": [Function],
        "statusable": Object {
          "status": "",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "actions": Array [],
      "children": <Unknown
        avatar={
          <Avatar
            prefixCls="ant-avatar"
            shape="circle"
            size="small"
            style={
              Object {
                "backgroundColor": "rgb(187, 187, 187)",
                "boxShadow": "0 0 5px 2px hsl(0, 0%, 73.3%)",
              }
            }
          />
        }
        description="'s status is currently unknown"
        title=""
      />,
      "style": Object {
        "flex": 1,
        "marginLeft": 0,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "avatar": <Avatar
          prefixCls="ant-avatar"
          shape="circle"
          size="small"
          style={
            Object {
              "backgroundColor": "rgb(187, 187, 187)",
              "boxShadow": "0 0 5px 2px hsl(0, 0%, 73.3%)",
            }
          }
        />,
        "description": "'s status is currently unknown",
        "title": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "actions": Array [],
        "children": <Unknown
          avatar={
            <Avatar
              prefixCls="ant-avatar"
              shape="circle"
              size="small"
              style={
                Object {
                  "backgroundColor": "rgb(187, 187, 187)",
                  "boxShadow": "0 0 5px 2px hsl(0, 0%, 73.3%)",
                }
              }
            />
          }
          description="'s status is currently unknown"
          title=""
        />,
        "style": Object {
          "flex": 1,
          "marginLeft": 0,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "avatar": <Avatar
            prefixCls="ant-avatar"
            shape="circle"
            size="small"
            style={
              Object {
                "backgroundColor": "rgb(187, 187, 187)",
                "boxShadow": "0 0 5px 2px hsl(0, 0%, 73.3%)",
              }
            }
          />,
          "description": "'s status is currently unknown",
          "title": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
