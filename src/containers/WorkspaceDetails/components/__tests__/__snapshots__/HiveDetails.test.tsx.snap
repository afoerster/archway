// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HiveDetails renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HiveDetails
    allocations={Array []}
    onChangeAllocation={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "actions": Array [
        <a
          href={undefined}
          target="_blank"
>
          See in Hue
</a>,
      ],
      "children": Array [
        <CardHeader
          heading="Hive Tables"
          icon="database"
          rightAction={
                    <Icon
                              onClick={[Function]}
                              spin={undefined}
                              style={
                                        Object {
                                                  "alignSelf": "flex-start",
                                                  "cursor": "pointer",
                                                }
                              }
                              type="sync"
                    />
          }
          subheading={
                    <Dropdown
                              mouseEnterDelay={0.15}
                              mouseLeaveDelay={0.1}
                              overlay={
                                        <Menu
                                                  className=""
                                                  focusable={false}
                                                  onClick={[Function]}
                                                  theme="light"
                                        >
                                                  
                                        </Menu>
                              }
                              placement="bottomLeft"
                              trigger={
                                        Array [
                                                  "click",
                                                ]
                              }
                    >
                              <a
                                        className="ant-dropdown-link"
                                        href="#"
                              >
                                        No Database Found
                                        <Icon
                                                  type="down"
                                        />
                              </a>
                    </Dropdown>
          }
/>,
        <Row
          gutter={12}
          justify="center"
          style={
                    Object {
                              "marginTop": 18,
                            }
          }
          type="flex"
>
          <div
                    style={
                              Object {
                                        "color": "rgba(0, 0, 0, .65)",
                                      }
                    }
          >
                    No tables yet.
          </div>
</Row>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "heading": "Hive Tables",
          "icon": "database",
          "rightAction": <Icon
            onClick={[Function]}
            spin={undefined}
            style={
                        Object {
                                    "alignSelf": "flex-start",
                                    "cursor": "pointer",
                                  }
            }
            type="sync"
/>,
          "subheading": <Dropdown
            mouseEnterDelay={0.15}
            mouseLeaveDelay={0.1}
            overlay={
                        <Menu
                                    className=""
                                    focusable={false}
                                    onClick={[Function]}
                                    theme="light"
                        >
                                    
                        </Menu>
            }
            placement="bottomLeft"
            trigger={
                        Array [
                                    "click",
                                  ]
            }
>
            <a
                        className="ant-dropdown-link"
                        href="#"
            >
                        No Database Found
                        <Icon
                                    type="down"
                        />
            </a>
</Dropdown>,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <div
            style={
                        Object {
                                    "color": "rgba(0, 0, 0, .65)",
                                  }
            }
>
            No tables yet.
</div>,
          "gutter": 12,
          "justify": "center",
          "style": Object {
            "marginTop": 18,
          },
          "type": "flex",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No tables yet.",
            "style": Object {
              "color": "rgba(0, 0, 0, .65)",
            },
          },
          "ref": null,
          "rendered": "No tables yet.",
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "actions": Array [
          <a
            href={undefined}
            target="_blank"
>
            See in Hue
</a>,
        ],
        "children": Array [
          <CardHeader
            heading="Hive Tables"
            icon="database"
            rightAction={
                        <Icon
                                    onClick={[Function]}
                                    spin={undefined}
                                    style={
                                                Object {
                                                            "alignSelf": "flex-start",
                                                            "cursor": "pointer",
                                                          }
                                    }
                                    type="sync"
                        />
            }
            subheading={
                        <Dropdown
                                    mouseEnterDelay={0.15}
                                    mouseLeaveDelay={0.1}
                                    overlay={
                                                <Menu
                                                            className=""
                                                            focusable={false}
                                                            onClick={[Function]}
                                                            theme="light"
                                                >
                                                            
                                                </Menu>
                                    }
                                    placement="bottomLeft"
                                    trigger={
                                                Array [
                                                            "click",
                                                          ]
                                    }
                        >
                                    <a
                                                className="ant-dropdown-link"
                                                href="#"
                                    >
                                                No Database Found
                                                <Icon
                                                            type="down"
                                                />
                                    </a>
                        </Dropdown>
            }
/>,
          <Row
            gutter={12}
            justify="center"
            style={
                        Object {
                                    "marginTop": 18,
                                  }
            }
            type="flex"
>
            <div
                        style={
                                    Object {
                                                "color": "rgba(0, 0, 0, .65)",
                                              }
                        }
            >
                        No tables yet.
            </div>
</Row>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "heading": "Hive Tables",
            "icon": "database",
            "rightAction": <Icon
              onClick={[Function]}
              spin={undefined}
              style={
                            Object {
                                          "alignSelf": "flex-start",
                                          "cursor": "pointer",
                                        }
              }
              type="sync"
/>,
            "subheading": <Dropdown
              mouseEnterDelay={0.15}
              mouseLeaveDelay={0.1}
              overlay={
                            <Menu
                                          className=""
                                          focusable={false}
                                          onClick={[Function]}
                                          theme="light"
                            >
                                          
                            </Menu>
              }
              placement="bottomLeft"
              trigger={
                            Array [
                                          "click",
                                        ]
              }
>
              <a
                            className="ant-dropdown-link"
                            href="#"
              >
                            No Database Found
                            <Icon
                                          type="down"
                            />
              </a>
</Dropdown>,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <div
              style={
                            Object {
                                          "color": "rgba(0, 0, 0, .65)",
                                        }
              }
>
              No tables yet.
</div>,
            "gutter": 12,
            "justify": "center",
            "style": Object {
              "marginTop": 18,
            },
            "type": "flex",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No tables yet.",
              "style": Object {
                "color": "rgba(0, 0, 0, .65)",
              },
            },
            "ref": null,
            "rendered": "No tables yet.",
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
