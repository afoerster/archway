// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkspaceListItem renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WorkspaceListItem
    onSelected={[Function]}
    workspace={
      Object {
        "applications": Array [],
        "behavior": "",
        "compliance": Object {
          "pci_data": false,
          "phi_data": false,
          "pii_data": false,
        },
        "data": Array [
          Object {
            "consumed_in_gb": 0,
            "location": "",
            "managing_group": Object {
              "group": Object {
                "common_name": "",
                "distinguished_name": "",
                "sentry_role": "",
              },
            },
            "name": "",
            "size_in_gb": 0,
          },
        ],
        "description": "",
        "id": 0,
        "name": "",
        "processing": Array [
          Object {
            "id": 0,
            "max_cores": 0,
            "max_memory_in_gb": 0,
            "pool_name": "",
          },
        ],
        "requested_date": 1970-01-01T00:00:00.000Z,
        "requester": "",
        "single_user": false,
        "summary": "",
        "topics": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Card
        bordered={true}
        hoverable={true}
        onClick={[Function]}
        style={
          Object {
            "textAlign": "center",
          }
        }
      >
        <h2
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          
        </h2>
        <div
          style={
            Object {
              "marginBottom": 10,
              "marginTop": 10,
            }
          }
        >
          <Icon
            style={
              Object {
                "fontSize": 42,
              }
            }
            type="deployment-unit"
          />
          <div
            style={
              Object {
                "fontSize": 12,
                "textTransform": "uppercase",
              }
            }
          >
            
             workspace
          </div>
        </div>
        <p>
          
        </p>
        <Tag
          closable={false}
          color="red"
          prefixCls="ant-tag"
        >
          all approvals needed
        </Tag>
      </Card>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bordered": true,
        "children": Array [
          <h2
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            
          </h2>,
          <div
            style={
              Object {
                "marginBottom": 10,
                "marginTop": 10,
              }
            }
          >
            <Icon
              style={
                Object {
                  "fontSize": 42,
                }
              }
              type="deployment-unit"
            />
            <div
              style={
                Object {
                  "fontSize": 12,
                  "textTransform": "uppercase",
                }
              }
            >
              
               workspace
            </div>
          </div>,
          <p>
            
          </p>,
          <Tag
            closable={false}
            color="red"
            prefixCls="ant-tag"
          >
            all approvals needed
          </Tag>,
        ],
        "hoverable": true,
        "onClick": [Function],
        "style": Object {
          "textAlign": "center",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
            "style": Object {
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": "",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Icon
                style={
                  Object {
                    "fontSize": 42,
                  }
                }
                type="deployment-unit"
              />,
              <div
                style={
                  Object {
                    "fontSize": 12,
                    "textTransform": "uppercase",
                  }
                }
              >
                
                 workspace
              </div>,
            ],
            "style": Object {
              "marginBottom": 10,
              "marginTop": 10,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "style": Object {
                  "fontSize": 42,
                },
                "type": "deployment-unit",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "",
                  " workspace",
                ],
                "style": Object {
                  "fontSize": 12,
                  "textTransform": "uppercase",
                },
              },
              "ref": null,
              "rendered": Array [
                "",
                " workspace",
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "all approvals needed",
            "closable": false,
            "color": "red",
            "prefixCls": "ant-tag",
          },
          "ref": null,
          "rendered": "all approvals needed",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Card
          bordered={true}
          hoverable={true}
          onClick={[Function]}
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
          <h2
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            
          </h2>
          <div
            style={
              Object {
                "marginBottom": 10,
                "marginTop": 10,
              }
            }
          >
            <Icon
              style={
                Object {
                  "fontSize": 42,
                }
              }
              type="deployment-unit"
            />
            <div
              style={
                Object {
                  "fontSize": 12,
                  "textTransform": "uppercase",
                }
              }
            >
              
               workspace
            </div>
          </div>
          <p>
            
          </p>
          <Tag
            closable={false}
            color="red"
            prefixCls="ant-tag"
          >
            all approvals needed
          </Tag>
        </Card>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bordered": true,
          "children": Array [
            <h2
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              
            </h2>,
            <div
              style={
                Object {
                  "marginBottom": 10,
                  "marginTop": 10,
                }
              }
            >
              <Icon
                style={
                  Object {
                    "fontSize": 42,
                  }
                }
                type="deployment-unit"
              />
              <div
                style={
                  Object {
                    "fontSize": 12,
                    "textTransform": "uppercase",
                  }
                }
              >
                
                 workspace
              </div>
            </div>,
            <p>
              
            </p>,
            <Tag
              closable={false}
              color="red"
              prefixCls="ant-tag"
            >
              all approvals needed
            </Tag>,
          ],
          "hoverable": true,
          "onClick": [Function],
          "style": Object {
            "textAlign": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "style": Object {
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": "",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Icon
                  style={
                    Object {
                      "fontSize": 42,
                    }
                  }
                  type="deployment-unit"
                />,
                <div
                  style={
                    Object {
                      "fontSize": 12,
                      "textTransform": "uppercase",
                    }
                  }
                >
                  
                   workspace
                </div>,
              ],
              "style": Object {
                "marginBottom": 10,
                "marginTop": 10,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "style": Object {
                    "fontSize": 42,
                  },
                  "type": "deployment-unit",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "",
                    " workspace",
                  ],
                  "style": Object {
                    "fontSize": 12,
                    "textTransform": "uppercase",
                  },
                },
                "ref": null,
                "rendered": Array [
                  "",
                  " workspace",
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "all approvals needed",
              "closable": false,
              "color": "red",
              "prefixCls": "ant-tag",
            },
            "ref": null,
            "rendered": "all approvals needed",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
