version: 2
jobs:
  build:
    docker:
      - image: circleci/java:8-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.sbt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: cat /dev/null | ./sbt test:compile
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}
  test:
    docker:
      - image: circleci/java:8-jdk
      - image: postgres
        entrypoint: docker-entrypoint.sh
        cmd: postgres
        environment:
          POSTGRES_DB: heimdali
      - image: jotunn/openldap
        entrypoint: /container/tool/run
        cmd: --copy-service
        environment:
          LDAP_DOMAIN: jotunn.io
          LDAP_READONLY: true
        auth:
          username: bennydt
          password: $DOCKERHUB_PASSWORD
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.sbt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: cat /dev/null | ./sbt test:test
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies--{{ checksum "build.sbt" }}
      - run: cat /dev/null | ./sbt "set test in dist := {}" dist
      - run: cat /dev/null | unzip target/universal/heimdali-api.zip -d docker
      - persist_to_workspace:
          root: docker
          paths:
            - heimdali-api
    post:
      - mkdir -p $CIRCLE_TEST_REPORTS/junit/
      - find . -type f -regex ".*/target/test-reports/*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

  deploy:
    docker:
      - image: docker
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: docker
      - run:
        command: |
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker build -t jotunn/heimdali-api docker
          docker push jotunn/heimdali-api:latest


workflows:
  version: 2
  get_ready:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test